name: CI
on: [push]


jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
        toolchain:
          - {compiler: gcc, version: 13}
          - {compiler: intel-classic, version: '2021.10'}
                # - {compiler: intel, version: '2023.2'}
                # - {compiler: nvidia-hpc, version: '23.11'}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Setup Fortran Compiler
      uses: fortran-lang/setup-fortran@v1
      id: setup-fortran
      with:
        compiler: ${{ matrix.toolchain.compiler }}
        version: ${{ matrix.toolchain.version }}

    - name: Install Python
      uses: actions/setup-python@v1 # Use pip to install latest CMake, & FORD/Jin2For, etc.
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@v1

    - name: Setup Fortran Package Manager
      uses: fortran-lang/setup-fpm@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ford numpy matplotlib gcovr numpy scipy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install NLopt
      run:
        sudo apt-get install libnlopt-dev

    - name: Compile
      run: fpm build --profile release --compiler ${{ env.FC }}

    - name: Run tests
      run: |
        fpm test --profile debug --flag -coverage --compiler ${{ env.FC }}
        bash ci/ci.sh
    
    - name: Coverage
      run: bash ci/ci.sh coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: ipqa-research/yaeos
